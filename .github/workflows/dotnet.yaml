name: .NET Core

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    name: Dotnet build
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup dotnet runtime 2.0.9
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.202
      - name: Setup dotnet runtime 2.1.17
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.805
      - name: Setup dotnet SDK 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.201
      - name: Setup SxS dotnet
        if: matrix.os == 'windows-latest'
        run: |
          (robocopy %DOTNET_ROOT:3.1.201=2.1.805% %DOTNET_ROOT% /E /XC /XN /XO /NFL /NDL /NJH /NJS /NP) ^& if %ERRORLEVEL% geq 8 exit /B %ERRORLEVEL%
          (robocopy %DOTNET_ROOT:3.1.201=2.1.202% %DOTNET_ROOT% /E /XC /XN /XO /NFL /NDL /NJH /NJS /NP) ^& if %ERRORLEVEL% geq 8 exit /B %ERRORLEVEL%
          exit /B 0
        shell: cmd
      - name: Setup SxS dotnet
        if: matrix.os != 'windows-latest'
        run: |
          rsync --archive --ignore-existing ${DOTNET_ROOT/3.1.201/2.1.805}/ ${DOTNET_ROOT/3.1.201/2.1.202}/ $DOTNET_ROOT
      - name: Build
        run: dotnet build --configuration Release
      - name: Test
        run: dotnet test /p:CollectCoverage=true /p:ExcludeByFile=\"**/KubernetesClient/generated/**/*.cs\" /p:CoverletOutputFormat="cobertura"
      # - uses: 5monkeys/cobertura-action@master
      #   with:
      #     path: tests/KubernetesClient.Tests/coverage.netcoreapp2.1.cobertura.xml
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     minimum_coverage: 0

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
