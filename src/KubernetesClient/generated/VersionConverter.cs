// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
using AutoMapper;
using k8s.Models;

namespace k8s.Versioning
{


    public static partial class VersionConverter
    {
        private static void AutoConfigurations(IMapperConfigurationExpression cfg)
        {
                cfg.CreateMap<V1AggregationRule, V1alpha1AggregationRule>().ReverseMap();
                cfg.CreateMap<V1alpha1ClusterRole, V1ClusterRole>().ReverseMap();
                cfg.CreateMap<V1alpha1ClusterRoleList, V1ClusterRoleList>().ReverseMap();
                cfg.CreateMap<V2beta1ContainerResourceMetricSource, V2beta2ContainerResourceMetricSource>().ReverseMap();
                cfg.CreateMap<V2beta1ContainerResourceMetricStatus, V2beta2ContainerResourceMetricStatus>().ReverseMap();
                cfg.CreateMap<V1beta1CronJob, V1CronJob>().ReverseMap();
                cfg.CreateMap<V1beta1CronJobList, V1CronJobList>().ReverseMap();
                cfg.CreateMap<V1beta1CronJobSpec, V1CronJobSpec>().ReverseMap();
                cfg.CreateMap<V1beta1CronJobStatus, V1CronJobStatus>().ReverseMap();
                cfg.CreateMap<V1CrossVersionObjectReference, V2beta1CrossVersionObjectReference>().ReverseMap();
                cfg.CreateMap<V1CrossVersionObjectReference, V2beta2CrossVersionObjectReference>().ReverseMap();
                cfg.CreateMap<V2beta1CrossVersionObjectReference, V2beta2CrossVersionObjectReference>().ReverseMap();
                cfg.CreateMap<V1alpha1CSIStorageCapacity, V1beta1CSIStorageCapacity>().ReverseMap();
                cfg.CreateMap<V1alpha1CSIStorageCapacityList, V1beta1CSIStorageCapacityList>().ReverseMap();
                cfg.CreateMap<V1beta1EndpointConditions, V1EndpointConditions>().ReverseMap();
                cfg.CreateMap<V1beta1EndpointHints, V1EndpointHints>().ReverseMap();
                cfg.CreateMap<V1beta1EndpointSlice, V1EndpointSlice>().ReverseMap();
                cfg.CreateMap<V1beta1EndpointSliceList, V1EndpointSliceList>().ReverseMap();
                cfg.CreateMap<V1beta1ForZone, V1ForZone>().ReverseMap();
                cfg.CreateMap<V1HorizontalPodAutoscaler, V2beta1HorizontalPodAutoscaler>().ReverseMap();
                cfg.CreateMap<V1HorizontalPodAutoscaler, V2beta2HorizontalPodAutoscaler>().ReverseMap();
                cfg.CreateMap<V2beta1HorizontalPodAutoscaler, V2beta2HorizontalPodAutoscaler>().ReverseMap();
                cfg.CreateMap<V2beta1HorizontalPodAutoscalerCondition, V2beta2HorizontalPodAutoscalerCondition>().ReverseMap();
                cfg.CreateMap<V1HorizontalPodAutoscalerList, V2beta1HorizontalPodAutoscalerList>().ReverseMap();
                cfg.CreateMap<V1HorizontalPodAutoscalerList, V2beta2HorizontalPodAutoscalerList>().ReverseMap();
                cfg.CreateMap<V2beta1HorizontalPodAutoscalerList, V2beta2HorizontalPodAutoscalerList>().ReverseMap();
                cfg.CreateMap<V2beta1HorizontalPodAutoscalerStatus, V2beta2HorizontalPodAutoscalerStatus>().ReverseMap();
                cfg.CreateMap<V1beta1JobTemplateSpec, V1JobTemplateSpec>().ReverseMap();
                cfg.CreateMap<V2beta1MetricSpec, V2beta2MetricSpec>().ReverseMap();
                cfg.CreateMap<V2beta1MetricStatus, V2beta2MetricStatus>().ReverseMap();
                cfg.CreateMap<V1alpha1Overhead, V1beta1Overhead>().ReverseMap();
                cfg.CreateMap<V1alpha1Overhead, V1Overhead>().ReverseMap();
                cfg.CreateMap<V1beta1Overhead, V1Overhead>().ReverseMap();
                cfg.CreateMap<V1beta1PodDisruptionBudget, V1PodDisruptionBudget>().ReverseMap();
                cfg.CreateMap<V1beta1PodDisruptionBudgetList, V1PodDisruptionBudgetList>().ReverseMap();
                cfg.CreateMap<V1beta1PodDisruptionBudgetSpec, V1PodDisruptionBudgetSpec>().ReverseMap();
                cfg.CreateMap<V1beta1PodDisruptionBudgetStatus, V1PodDisruptionBudgetStatus>().ReverseMap();
                cfg.CreateMap<V1alpha1PolicyRule, V1PolicyRule>().ReverseMap();
                cfg.CreateMap<V1alpha1PriorityClass, V1PriorityClass>().ReverseMap();
                cfg.CreateMap<V1alpha1PriorityClassList, V1PriorityClassList>().ReverseMap();
                cfg.CreateMap<V1alpha1Role, V1Role>().ReverseMap();
                cfg.CreateMap<V1alpha1RoleBindingList, V1RoleBindingList>().ReverseMap();
                cfg.CreateMap<V1alpha1RoleList, V1RoleList>().ReverseMap();
                cfg.CreateMap<V1alpha1RoleRef, V1RoleRef>().ReverseMap();
                cfg.CreateMap<V1alpha1RuntimeClassList, V1beta1RuntimeClassList>().ReverseMap();
                cfg.CreateMap<V1alpha1RuntimeClassList, V1RuntimeClassList>().ReverseMap();
                cfg.CreateMap<V1beta1RuntimeClassList, V1RuntimeClassList>().ReverseMap();
                cfg.CreateMap<V1alpha1Scheduling, V1beta1Scheduling>().ReverseMap();
                cfg.CreateMap<V1alpha1Scheduling, V1Scheduling>().ReverseMap();
                cfg.CreateMap<V1beta1Scheduling, V1Scheduling>().ReverseMap();
                cfg.CreateMap<V1alpha1Subject, V1beta1Subject>().ReverseMap();
                cfg.CreateMap<V1alpha1Subject, V1Subject>().ReverseMap();
                cfg.CreateMap<V1beta1Subject, V1Subject>().ReverseMap();
                cfg.CreateMap<V1alpha1VolumeAttachment, V1VolumeAttachment>().ReverseMap();
                cfg.CreateMap<V1alpha1VolumeAttachmentList, V1VolumeAttachmentList>().ReverseMap();
                cfg.CreateMap<V1alpha1VolumeAttachmentSource, V1VolumeAttachmentSource>().ReverseMap();
                cfg.CreateMap<V1alpha1VolumeAttachmentSpec, V1VolumeAttachmentSpec>().ReverseMap();
                cfg.CreateMap<V1alpha1VolumeAttachmentStatus, V1VolumeAttachmentStatus>().ReverseMap();
                cfg.CreateMap<V1alpha1VolumeError, V1VolumeError>().ReverseMap();
        }
    }


}
