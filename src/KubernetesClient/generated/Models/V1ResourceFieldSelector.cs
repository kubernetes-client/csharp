// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// ResourceFieldSelector represents container resources (cpu, memory) and their
        /// output format
    /// </summary>
    public partial class V1ResourceFieldSelector
    {
        /// <summary>
        /// Initializes a new instance of the V1ResourceFieldSelector class.
        /// </summary>
        public V1ResourceFieldSelector()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1ResourceFieldSelector class.
        /// </summary>
        /// <param name="resource">
        /// Required: resource to select
        /// </param>
        /// <param name="containerName">
        /// Container name: required for volumes, optional for env vars
        /// </param>
        /// <param name="divisor">
        /// Specifies the output format of the exposed resources, defaults to &quot;1&quot;
        /// </param>
        public V1ResourceFieldSelector(string resource, string containerName = null, ResourceQuantity divisor = null)
        {
            ContainerName = containerName;
            Divisor = divisor;
            Resource = resource;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Container name: required for volumes, optional for env vars
        /// </summary>
        [JsonPropertyName("containerName")]
        public string ContainerName { get; set; }

        /// <summary>
        /// Specifies the output format of the exposed resources, defaults to &quot;1&quot;
        /// </summary>
        [JsonPropertyName("divisor")]
        public ResourceQuantity Divisor { get; set; }

        /// <summary>
        /// Required: resource to select
        /// </summary>
        [JsonPropertyName("resource")]
        public string Resource { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            Divisor?.Validate();
        }
    }
}
