// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// ExecAction describes a &quot;run in container&quot; action.
    /// </summary>
    public partial class V1ExecAction
    {
        /// <summary>
        /// Initializes a new instance of the V1ExecAction class.
        /// </summary>
        public V1ExecAction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1ExecAction class.
        /// </summary>
        /// <param name="command">
        /// Command is the command line to execute inside the container, the working
        /// directory for the command  is root (&apos;/&apos;) in the container&apos;s filesystem. The
        /// command is simply exec&apos;d, it is not run inside a shell, so traditional shell
        /// instructions (&apos;|&apos;, etc) won&apos;t work. To use a shell, you need to explicitly call
        /// out to that shell. Exit status of 0 is treated as live/healthy and non-zero is
        /// unhealthy.
        /// </param>
        public V1ExecAction(IList<string> command = null)
        {
            Command = command;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Command is the command line to execute inside the container, the working
        /// directory for the command  is root (&apos;/&apos;) in the container&apos;s filesystem. The
        /// command is simply exec&apos;d, it is not run inside a shell, so traditional shell
        /// instructions (&apos;|&apos;, etc) won&apos;t work. To use a shell, you need to explicitly call
        /// out to that shell. Exit status of 0 is treated as live/healthy and non-zero is
        /// unhealthy.
        /// </summary>
        [JsonPropertyName("command")]
        public IList<string> Command { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
