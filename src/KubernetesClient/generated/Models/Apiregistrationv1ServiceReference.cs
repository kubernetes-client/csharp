// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// ServiceReference holds a reference to Service.legacy.k8s.io
    /// </summary>
    public partial class Apiregistrationv1ServiceReference
    {
        /// <summary>
        /// Initializes a new instance of the Apiregistrationv1ServiceReference class.
        /// </summary>
        public Apiregistrationv1ServiceReference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Apiregistrationv1ServiceReference class.
        /// </summary>
        /// <param name="name">
        /// Name is the name of the service
        /// </param>
        /// <param name="namespaceProperty">
        /// Namespace is the namespace of the service
        /// </param>
        /// <param name="port">
        /// If specified, the port on the service that hosting webhook. Default to 443 for
        /// backward compatibility. `port` should be a valid port number (1-65535,
        /// inclusive).
        /// </param>
        public Apiregistrationv1ServiceReference(string name = null, string namespaceProperty = null, int? port = null)
        {
            Name = name;
            NamespaceProperty = namespaceProperty;
            Port = port;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Name is the name of the service
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Namespace is the namespace of the service
        /// </summary>
        [JsonPropertyName("namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// If specified, the port on the service that hosting webhook. Default to 443 for
        /// backward compatibility. `port` should be a valid port number (1-65535,
        /// inclusive).
        /// </summary>
        [JsonPropertyName("port")]
        public int? Port { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
