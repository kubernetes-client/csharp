// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// RuleWithOperations is a tuple of Operations and Resources. It is recommended to
        /// make sure that all the tuple expansions are valid.
    /// </summary>
    public partial class V1RuleWithOperations
    {
        /// <summary>
        /// Initializes a new instance of the V1RuleWithOperations class.
        /// </summary>
        public V1RuleWithOperations()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1RuleWithOperations class.
        /// </summary>
        /// <param name="apiGroups">
        /// APIGroups is the API groups the resources belong to. &apos;*&apos; is all groups. If &apos;*&apos;
        /// is present, the length of the slice must be one. Required.
        /// </param>
        /// <param name="apiVersions">
        /// APIVersions is the API versions the resources belong to. &apos;*&apos; is all versions. If
        /// &apos;*&apos; is present, the length of the slice must be one. Required.
        /// </param>
        /// <param name="operations">
        /// Operations is the operations the admission hook cares about - CREATE, UPDATE,
        /// DELETE, CONNECT or * for all of those operations and any future admission
        /// operations that are added. If &apos;*&apos; is present, the length of the slice must be
        /// one. Required.
        /// </param>
        /// <param name="resources">
        /// Resources is a list of resources this rule applies to.
        /// 
        /// For example: &apos;pods&apos; means pods. &apos;pods/log&apos; means the log subresource of pods.
        /// &apos;*&apos; means all resources, but not subresources. &apos;pods/*&apos; means all subresources
        /// of pods. &apos;*/scale&apos; means all scale subresources. &apos;*/*&apos; means all resources and
        /// their subresources.
        /// 
        /// If wildcard is present, the validation rule will ensure resources do not overlap
        /// with each other.
        /// 
        /// Depending on the enclosing object, subresources might not be allowed. Required.
        /// </param>
        /// <param name="scope">
        /// scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;,
        /// &quot;Namespaced&quot;, and &quot;*&quot; &quot;Cluster&quot; means that only cluster-scoped resources will
        /// match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means
        /// that only namespaced resources will match this rule. &quot;*&quot; means that there are no
        /// scope restrictions. Subresources match the scope of their parent resource.
        /// Default is &quot;*&quot;.
        /// </param>
        public V1RuleWithOperations(IList<string> apiGroups = null, IList<string> apiVersions = null, IList<string> operations = null, IList<string> resources = null, string scope = null)
        {
            ApiGroups = apiGroups;
            ApiVersions = apiVersions;
            Operations = operations;
            Resources = resources;
            Scope = scope;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// APIGroups is the API groups the resources belong to. &apos;*&apos; is all groups. If &apos;*&apos;
        /// is present, the length of the slice must be one. Required.
        /// </summary>
        [JsonProperty(PropertyName = "apiGroups")]
        public IList<string> ApiGroups { get; set; }

        /// <summary>
        /// APIVersions is the API versions the resources belong to. &apos;*&apos; is all versions. If
        /// &apos;*&apos; is present, the length of the slice must be one. Required.
        /// </summary>
        [JsonProperty(PropertyName = "apiVersions")]
        public IList<string> ApiVersions { get; set; }

        /// <summary>
        /// Operations is the operations the admission hook cares about - CREATE, UPDATE,
        /// DELETE, CONNECT or * for all of those operations and any future admission
        /// operations that are added. If &apos;*&apos; is present, the length of the slice must be
        /// one. Required.
        /// </summary>
        [JsonProperty(PropertyName = "operations")]
        public IList<string> Operations { get; set; }

        /// <summary>
        /// Resources is a list of resources this rule applies to.
        /// 
        /// For example: &apos;pods&apos; means pods. &apos;pods/log&apos; means the log subresource of pods.
        /// &apos;*&apos; means all resources, but not subresources. &apos;pods/*&apos; means all subresources
        /// of pods. &apos;*/scale&apos; means all scale subresources. &apos;*/*&apos; means all resources and
        /// their subresources.
        /// 
        /// If wildcard is present, the validation rule will ensure resources do not overlap
        /// with each other.
        /// 
        /// Depending on the enclosing object, subresources might not be allowed. Required.
        /// </summary>
        [JsonProperty(PropertyName = "resources")]
        public IList<string> Resources { get; set; }

        /// <summary>
        /// scope specifies the scope of this rule. Valid values are &quot;Cluster&quot;,
        /// &quot;Namespaced&quot;, and &quot;*&quot; &quot;Cluster&quot; means that only cluster-scoped resources will
        /// match this rule. Namespace API objects are cluster-scoped. &quot;Namespaced&quot; means
        /// that only namespaced resources will match this rule. &quot;*&quot; means that there are no
        /// scope restrictions. Subresources match the scope of their parent resource.
        /// Default is &quot;*&quot;.
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        public string Scope { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
