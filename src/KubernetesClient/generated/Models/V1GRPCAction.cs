// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// 
    /// </summary>
    public partial class V1GRPCAction
    {
        /// <summary>
        /// Initializes a new instance of the V1GRPCAction class.
        /// </summary>
        public V1GRPCAction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1GRPCAction class.
        /// </summary>
        /// <param name="port">
        /// Port number of the gRPC service. Number must be in the range 1 to 65535.
        /// </param>
        /// <param name="service">
        /// Service is the name of the service to place in the gRPC HealthCheckRequest (see
        /// https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
        /// 
        /// If this is not specified, the default behavior is defined by gRPC.
        /// </param>
        public V1GRPCAction(int port, string service = null)
        {
            Port = port;
            Service = service;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Port number of the gRPC service. Number must be in the range 1 to 65535.
        /// </summary>
        [JsonPropertyName("port")]
        public int Port { get; set; }

        /// <summary>
        /// Service is the name of the service to place in the gRPC HealthCheckRequest (see
        /// https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
        /// 
        /// If this is not specified, the default behavior is defined by gRPC.
        /// </summary>
        [JsonPropertyName("service")]
        public string Service { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
