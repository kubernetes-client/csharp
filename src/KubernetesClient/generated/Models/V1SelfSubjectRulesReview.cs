// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// SelfSubjectRulesReview enumerates the set of actions the current user can
        /// perform within a namespace. The returned list of actions may be incomplete
        /// depending on the server&apos;s authorization mode, and any errors experienced during
        /// the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide
        /// actions, or to quickly let an end user reason about their permissions. It should
        /// NOT Be used by external systems to drive authorization decisions as this raises
        /// confused deputy, cache lifetime/revocation, and correctness concerns.
        /// SubjectAccessReview, and LocalAccessReview are the correct way to defer
        /// authorization decisions to the API server.
    /// </summary>
    public partial class V1SelfSubjectRulesReview
    {
        /// <summary>
        /// Initializes a new instance of the V1SelfSubjectRulesReview class.
        /// </summary>
        public V1SelfSubjectRulesReview()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1SelfSubjectRulesReview class.
        /// </summary>
        /// <param name="spec">
        /// Spec holds information about the request being evaluated.
        /// </param>
        /// <param name="apiVersion">
        /// APIVersion defines the versioned schema of this representation of an object.
        /// Servers should convert recognized schemas to the latest internal value, and may
        /// reject unrecognized values. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </param>
        /// <param name="kind">
        /// Kind is a string value representing the REST resource this object represents.
        /// Servers may infer this from the endpoint the client submits requests to. Cannot
        /// be updated. In CamelCase. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </param>
        /// <param name="metadata">
        /// Standard list metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </param>
        /// <param name="status">
        /// Status is filled in by the server and indicates the set of actions a user can
        /// perform.
        /// </param>
        public V1SelfSubjectRulesReview(V1SelfSubjectRulesReviewSpec spec, string apiVersion = null, string kind = null, V1ObjectMeta metadata = null, V1SubjectRulesReviewStatus status = null)
        {
            ApiVersion = apiVersion;
            Kind = kind;
            Metadata = metadata;
            Spec = spec;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object.
        /// Servers should convert recognized schemas to the latest internal value, and may
        /// reject unrecognized values. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </summary>
        [JsonPropertyName("apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Kind is a string value representing the REST resource this object represents.
        /// Servers may infer this from the endpoint the client submits requests to. Cannot
        /// be updated. In CamelCase. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </summary>
        [JsonPropertyName("kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Standard list metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </summary>
        [JsonPropertyName("metadata")]
        public V1ObjectMeta Metadata { get; set; }

        /// <summary>
        /// Spec holds information about the request being evaluated.
        /// </summary>
        [JsonPropertyName("spec")]
        public V1SelfSubjectRulesReviewSpec Spec { get; set; }

        /// <summary>
        /// Status is filled in by the server and indicates the set of actions a user can
        /// perform.
        /// </summary>
        [JsonPropertyName("status")]
        public V1SubjectRulesReviewStatus Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Spec == null)
            {
                throw new ArgumentNullException("Spec");    
            }
            Metadata?.Validate();
            Spec?.Validate();
            Status?.Validate();
        }
    }
}
