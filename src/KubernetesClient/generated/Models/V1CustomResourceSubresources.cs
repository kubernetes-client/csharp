// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// CustomResourceSubresources defines the status and scale subresources for
        /// CustomResources.
    /// </summary>
    public partial class V1CustomResourceSubresources
    {
        /// <summary>
        /// Initializes a new instance of the V1CustomResourceSubresources class.
        /// </summary>
        public V1CustomResourceSubresources()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1CustomResourceSubresources class.
        /// </summary>
        /// <param name="scale">
        /// scale indicates the custom resource should serve a `/scale` subresource that
        /// returns an `autoscaling/v1` Scale object.
        /// </param>
        /// <param name="status">
        /// status indicates the custom resource should serve a `/status` subresource. When
        /// enabled: 1. requests to the custom resource primary endpoint ignore changes to
        /// the `status` stanza of the object. 2. requests to the custom resource `/status`
        /// subresource ignore changes to anything other than the `status` stanza of the
        /// object.
        /// </param>
        public V1CustomResourceSubresources(V1CustomResourceSubresourceScale scale = null, object status = null)
        {
            Scale = scale;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// scale indicates the custom resource should serve a `/scale` subresource that
        /// returns an `autoscaling/v1` Scale object.
        /// </summary>
        [JsonProperty(PropertyName = "scale")]
        public V1CustomResourceSubresourceScale Scale { get; set; }

        /// <summary>
        /// status indicates the custom resource should serve a `/status` subresource. When
        /// enabled: 1. requests to the custom resource primary endpoint ignore changes to
        /// the `status` stanza of the object. 2. requests to the custom resource `/status`
        /// subresource ignore changes to anything other than the `status` stanza of the
        /// object.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public object Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            Scale?.Validate();
        }
    }
}
