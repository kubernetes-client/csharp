// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// ClientIPConfig represents the configurations of Client IP based session
        /// affinity.
    /// </summary>
    public partial class V1ClientIPConfig
    {
        /// <summary>
        /// Initializes a new instance of the V1ClientIPConfig class.
        /// </summary>
        public V1ClientIPConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1ClientIPConfig class.
        /// </summary>
        /// <param name="timeoutSeconds">
        /// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The
        /// value must be &gt;0 &amp;&amp; &lt;=86400(for 1 day) if ServiceAffinity == &quot;ClientIP&quot;. Default
        /// value is 10800(for 3 hours).
        /// </param>
        public V1ClientIPConfig(int? timeoutSeconds = null)
        {
            TimeoutSeconds = timeoutSeconds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// timeoutSeconds specifies the seconds of ClientIP type session sticky time. The
        /// value must be &gt;0 &amp;&amp; &lt;=86400(for 1 day) if ServiceAffinity == &quot;ClientIP&quot;. Default
        /// value is 10800(for 3 hours).
        /// </summary>
        [JsonProperty(PropertyName = "timeoutSeconds")]
        public int? TimeoutSeconds { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
