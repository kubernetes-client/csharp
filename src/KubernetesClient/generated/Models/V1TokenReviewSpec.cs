// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// TokenReviewSpec is a description of the token authentication request.
    /// </summary>
    public partial class V1TokenReviewSpec
    {
        /// <summary>
        /// Initializes a new instance of the V1TokenReviewSpec class.
        /// </summary>
        public V1TokenReviewSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1TokenReviewSpec class.
        /// </summary>
        /// <param name="audiences">
        /// Audiences is a list of the identifiers that the resource server presented with
        /// the token identifies as. Audience-aware token authenticators will verify that
        /// the token was intended for at least one of the audiences in this list. If no
        /// audiences are provided, the audience will default to the audience of the
        /// Kubernetes apiserver.
        /// </param>
        /// <param name="token">
        /// Token is the opaque bearer token.
        /// </param>
        public V1TokenReviewSpec(IList<string> audiences = null, string token = null)
        {
            Audiences = audiences;
            Token = token;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Audiences is a list of the identifiers that the resource server presented with
        /// the token identifies as. Audience-aware token authenticators will verify that
        /// the token was intended for at least one of the audiences in this list. If no
        /// audiences are provided, the audience will default to the audience of the
        /// Kubernetes apiserver.
        /// </summary>
        [JsonPropertyName("audiences")]
        public IList<string> Audiences { get; set; }

        /// <summary>
        /// Token is the opaque bearer token.
        /// </summary>
        [JsonPropertyName("token")]
        public string Token { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
