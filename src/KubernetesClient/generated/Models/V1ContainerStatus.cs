// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// ContainerStatus contains details for the current status of this container.
    /// </summary>
    public partial class V1ContainerStatus
    {
        /// <summary>
        /// Initializes a new instance of the V1ContainerStatus class.
        /// </summary>
        public V1ContainerStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1ContainerStatus class.
        /// </summary>
        /// <param name="image">
        /// The image the container is running. More info:
        /// https://kubernetes.io/docs/concepts/containers/images.
        /// </param>
        /// <param name="imageID">
        /// ImageID of the container&apos;s image.
        /// </param>
        /// <param name="name">
        /// This must be a DNS_LABEL. Each container in a pod must have a unique name.
        /// Cannot be updated.
        /// </param>
        /// <param name="ready">
        /// Specifies whether the container has passed its readiness probe.
        /// </param>
        /// <param name="restartCount">
        /// The number of times the container has been restarted.
        /// </param>
        /// <param name="containerID">
        /// Container&apos;s ID in the format &apos;docker://&lt;container_id&gt;&apos;.
        /// </param>
        /// <param name="lastState">
        /// Details about the container&apos;s last termination condition.
        /// </param>
        /// <param name="started">
        /// Specifies whether the container has passed its startup probe. Initialized as
        /// false, becomes true after startupProbe is considered successful. Resets to false
        /// when the container is restarted, or if kubelet loses state temporarily. Is
        /// always true when no startupProbe is defined.
        /// </param>
        /// <param name="state">
        /// Details about the container&apos;s current condition.
        /// </param>
        public V1ContainerStatus(string image, string imageID, string name, bool ready, int restartCount, string containerID = null, V1ContainerState lastState = null, bool? started = null, V1ContainerState state = null)
        {
            ContainerID = containerID;
            Image = image;
            ImageID = imageID;
            LastState = lastState;
            Name = name;
            Ready = ready;
            RestartCount = restartCount;
            Started = started;
            State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Container&apos;s ID in the format &apos;docker://&lt;container_id&gt;&apos;.
        /// </summary>
        [JsonPropertyName("containerID")]
        public string ContainerID { get; set; }

        /// <summary>
        /// The image the container is running. More info:
        /// https://kubernetes.io/docs/concepts/containers/images.
        /// </summary>
        [JsonPropertyName("image")]
        public string Image { get; set; }

        /// <summary>
        /// ImageID of the container&apos;s image.
        /// </summary>
        [JsonPropertyName("imageID")]
        public string ImageID { get; set; }

        /// <summary>
        /// Details about the container&apos;s last termination condition.
        /// </summary>
        [JsonPropertyName("lastState")]
        public V1ContainerState LastState { get; set; }

        /// <summary>
        /// This must be a DNS_LABEL. Each container in a pod must have a unique name.
        /// Cannot be updated.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Specifies whether the container has passed its readiness probe.
        /// </summary>
        [JsonPropertyName("ready")]
        public bool Ready { get; set; }

        /// <summary>
        /// The number of times the container has been restarted.
        /// </summary>
        [JsonPropertyName("restartCount")]
        public int RestartCount { get; set; }

        /// <summary>
        /// Specifies whether the container has passed its startup probe. Initialized as
        /// false, becomes true after startupProbe is considered successful. Resets to false
        /// when the container is restarted, or if kubelet loses state temporarily. Is
        /// always true when no startupProbe is defined.
        /// </summary>
        [JsonPropertyName("started")]
        public bool? Started { get; set; }

        /// <summary>
        /// Details about the container&apos;s current condition.
        /// </summary>
        [JsonPropertyName("state")]
        public V1ContainerState State { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            LastState?.Validate();
            State?.Validate();
        }
    }
}
