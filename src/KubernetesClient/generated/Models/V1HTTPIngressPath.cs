// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// HTTPIngressPath associates a path with a backend. Incoming urls matching the
        /// path are forwarded to the backend.
    /// </summary>
    public partial class V1HTTPIngressPath
    {
        /// <summary>
        /// Initializes a new instance of the V1HTTPIngressPath class.
        /// </summary>
        public V1HTTPIngressPath()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1HTTPIngressPath class.
        /// </summary>
        /// <param name="backend">
        /// Backend defines the referenced service endpoint to which the traffic will be
        /// forwarded to.
        /// </param>
        /// <param name="pathType">
        /// PathType determines the interpretation of the Path matching. PathType can be one
        /// of the following values: * Exact: Matches the URL path exactly. * Prefix:
        /// Matches based on a URL path prefix split by &apos;/&apos;. Matching is
        /// done on a path element by element basis. A path element refers is the
        /// list of labels in the path split by the &apos;/&apos; separator. A request is a
        /// match for path p if every p is an element-wise prefix of p of the
        /// request path. Note that if the last element of the path is a substring
        /// of the last element in request path, it is not a match (e.g. /foo/bar
        /// matches /foo/bar/baz, but does not match /foo/barbaz).
        /// * ImplementationSpecific: Interpretation of the Path matching is up to
        /// the IngressClass. Implementations can treat this as a separate PathType
        /// or treat it identically to Prefix or Exact path types.
        /// Implementations are required to support all path types.
        /// </param>
        /// <param name="path">
        /// Path is matched against the path of an incoming request. Currently it can
        /// contain characters disallowed from the conventional &quot;path&quot; part of a URL as
        /// defined by RFC 3986. Paths must begin with a &apos;/&apos; and must be present when using
        /// PathType with value &quot;Exact&quot; or &quot;Prefix&quot;.
        /// </param>
        public V1HTTPIngressPath(V1IngressBackend backend, string pathType, string path = null)
        {
            Backend = backend;
            Path = path;
            PathType = pathType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Backend defines the referenced service endpoint to which the traffic will be
        /// forwarded to.
        /// </summary>
        [JsonPropertyName("backend")]
        public V1IngressBackend Backend { get; set; }

        /// <summary>
        /// Path is matched against the path of an incoming request. Currently it can
        /// contain characters disallowed from the conventional &quot;path&quot; part of a URL as
        /// defined by RFC 3986. Paths must begin with a &apos;/&apos; and must be present when using
        /// PathType with value &quot;Exact&quot; or &quot;Prefix&quot;.
        /// </summary>
        [JsonPropertyName("path")]
        public string Path { get; set; }

        /// <summary>
        /// PathType determines the interpretation of the Path matching. PathType can be one
        /// of the following values: * Exact: Matches the URL path exactly. * Prefix:
        /// Matches based on a URL path prefix split by &apos;/&apos;. Matching is
        /// done on a path element by element basis. A path element refers is the
        /// list of labels in the path split by the &apos;/&apos; separator. A request is a
        /// match for path p if every p is an element-wise prefix of p of the
        /// request path. Note that if the last element of the path is a substring
        /// of the last element in request path, it is not a match (e.g. /foo/bar
        /// matches /foo/bar/baz, but does not match /foo/barbaz).
        /// * ImplementationSpecific: Interpretation of the Path matching is up to
        /// the IngressClass. Implementations can treat this as a separate PathType
        /// or treat it identically to Prefix or Exact path types.
        /// Implementations are required to support all path types.
        /// </summary>
        [JsonPropertyName("pathType")]
        public string PathType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Backend == null)
            {
                throw new ArgumentNullException("Backend");    
            }
            Backend?.Validate();
        }
    }
}
