// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// LimitRangeItem defines a min/max usage limit for any resource that matches on
        /// kind.
    /// </summary>
    public partial class V1LimitRangeItem
    {
        /// <summary>
        /// Initializes a new instance of the V1LimitRangeItem class.
        /// </summary>
        public V1LimitRangeItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1LimitRangeItem class.
        /// </summary>
        /// <param name="type">
        /// Type of resource that this limit applies to.
        /// </param>
        /// <param name="defaultProperty">
        /// Default resource requirement limit value by resource name if resource limit is
        /// omitted.
        /// </param>
        /// <param name="defaultRequest">
        /// DefaultRequest is the default resource requirement request value by resource
        /// name if resource request is omitted.
        /// </param>
        /// <param name="max">
        /// Max usage constraints on this kind by resource name.
        /// </param>
        /// <param name="maxLimitRequestRatio">
        /// MaxLimitRequestRatio if specified, the named resource must have a request and
        /// limit that are both non-zero where limit divided by request is less than or
        /// equal to the enumerated value; this represents the max burst for the named
        /// resource.
        /// </param>
        /// <param name="min">
        /// Min usage constraints on this kind by resource name.
        /// </param>
        public V1LimitRangeItem(string type, IDictionary<string, ResourceQuantity> defaultProperty = null, IDictionary<string, ResourceQuantity> defaultRequest = null, IDictionary<string, ResourceQuantity> max = null, IDictionary<string, ResourceQuantity> maxLimitRequestRatio = null, IDictionary<string, ResourceQuantity> min = null)
        {
            DefaultProperty = defaultProperty;
            DefaultRequest = defaultRequest;
            Max = max;
            MaxLimitRequestRatio = maxLimitRequestRatio;
            Min = min;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Default resource requirement limit value by resource name if resource limit is
        /// omitted.
        /// </summary>
        [JsonProperty(PropertyName = "default")]
        public IDictionary<string, ResourceQuantity> DefaultProperty { get; set; }

        /// <summary>
        /// DefaultRequest is the default resource requirement request value by resource
        /// name if resource request is omitted.
        /// </summary>
        [JsonProperty(PropertyName = "defaultRequest")]
        public IDictionary<string, ResourceQuantity> DefaultRequest { get; set; }

        /// <summary>
        /// Max usage constraints on this kind by resource name.
        /// </summary>
        [JsonProperty(PropertyName = "max")]
        public IDictionary<string, ResourceQuantity> Max { get; set; }

        /// <summary>
        /// MaxLimitRequestRatio if specified, the named resource must have a request and
        /// limit that are both non-zero where limit divided by request is less than or
        /// equal to the enumerated value; this represents the max burst for the named
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "maxLimitRequestRatio")]
        public IDictionary<string, ResourceQuantity> MaxLimitRequestRatio { get; set; }

        /// <summary>
        /// Min usage constraints on this kind by resource name.
        /// </summary>
        [JsonProperty(PropertyName = "min")]
        public IDictionary<string, ResourceQuantity> Min { get; set; }

        /// <summary>
        /// Type of resource that this limit applies to.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
