// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// HorizontalPodAutoscalerSpec describes the desired functionality of the
        /// HorizontalPodAutoscaler.
    /// </summary>
    public partial class V2beta1HorizontalPodAutoscalerSpec
    {
        /// <summary>
        /// Initializes a new instance of the V2beta1HorizontalPodAutoscalerSpec class.
        /// </summary>
        public V2beta1HorizontalPodAutoscalerSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V2beta1HorizontalPodAutoscalerSpec class.
        /// </summary>
        /// <param name="maxReplicas">
        /// maxReplicas is the upper limit for the number of replicas to which the
        /// autoscaler can scale up. It cannot be less that minReplicas.
        /// </param>
        /// <param name="scaleTargetRef">
        /// scaleTargetRef points to the target resource to scale, and is used to the pods
        /// for which metrics should be collected, as well as to actually change the replica
        /// count.
        /// </param>
        /// <param name="metrics">
        /// metrics contains the specifications for which to use to calculate the desired
        /// replica count (the maximum replica count across all metrics will be used).  The
        /// desired replica count is calculated multiplying the ratio between the target
        /// value and the current value by the current number of pods.  Ergo, metrics used
        /// must decrease as the pod count is increased, and vice-versa.  See the individual
        /// metric source types for more information about how each type of metric must
        /// respond.
        /// </param>
        /// <param name="minReplicas">
        /// minReplicas is the lower limit for the number of replicas to which the
        /// autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be
        /// 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or
        /// External metric is configured.  Scaling is active as long as at least one metric
        /// value is available.
        /// </param>
        public V2beta1HorizontalPodAutoscalerSpec(int maxReplicas, V2beta1CrossVersionObjectReference scaleTargetRef, IList<V2beta1MetricSpec> metrics = null, int? minReplicas = null)
        {
            MaxReplicas = maxReplicas;
            Metrics = metrics;
            MinReplicas = minReplicas;
            ScaleTargetRef = scaleTargetRef;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// maxReplicas is the upper limit for the number of replicas to which the
        /// autoscaler can scale up. It cannot be less that minReplicas.
        /// </summary>
        [JsonPropertyName("maxReplicas")]
        public int MaxReplicas { get; set; }

        /// <summary>
        /// metrics contains the specifications for which to use to calculate the desired
        /// replica count (the maximum replica count across all metrics will be used).  The
        /// desired replica count is calculated multiplying the ratio between the target
        /// value and the current value by the current number of pods.  Ergo, metrics used
        /// must decrease as the pod count is increased, and vice-versa.  See the individual
        /// metric source types for more information about how each type of metric must
        /// respond.
        /// </summary>
        [JsonPropertyName("metrics")]
        public IList<V2beta1MetricSpec> Metrics { get; set; }

        /// <summary>
        /// minReplicas is the lower limit for the number of replicas to which the
        /// autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be
        /// 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or
        /// External metric is configured.  Scaling is active as long as at least one metric
        /// value is available.
        /// </summary>
        [JsonPropertyName("minReplicas")]
        public int? MinReplicas { get; set; }

        /// <summary>
        /// scaleTargetRef points to the target resource to scale, and is used to the pods
        /// for which metrics should be collected, as well as to actually change the replica
        /// count.
        /// </summary>
        [JsonPropertyName("scaleTargetRef")]
        public V2beta1CrossVersionObjectReference ScaleTargetRef { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ScaleTargetRef == null)
            {
                throw new ArgumentNullException("ScaleTargetRef");    
            }
            if (Metrics != null){
                foreach(var obj in Metrics)
                {
                    obj.Validate();
                }
            }
            ScaleTargetRef?.Validate();
        }
    }
}
