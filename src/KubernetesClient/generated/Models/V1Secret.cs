// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Secret holds secret data of a certain type. The total bytes of the
    /// values in the Data field must be less than MaxSecretSize bytes.
    /// </summary>
    public partial class V1Secret
    {
        /// <summary>
        /// Initializes a new instance of the V1Secret class.
        /// </summary>
        public V1Secret()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1Secret class.
        /// </summary>
        /// <param name="apiVersion">APIVersion defines the versioned schema of
        /// this representation of an object. Servers should convert recognized
        /// schemas to the latest internal value, and may reject unrecognized
        /// values. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources</param>
        /// <param name="data">Data contains the secret data. Each key must
        /// consist of alphanumeric characters, '-', '_' or '.'. The serialized
        /// form of the secret data is a base64 encoded string, representing
        /// the arbitrary (possibly non-string) data value here. Described in
        /// https://tools.ietf.org/html/rfc4648#section-4</param>
        /// <param name="immutable">Immutable, if set to true, ensures that
        /// data stored in the Secret cannot be updated (only object metadata
        /// can be modified). If not set to true, the field can be modified at
        /// any time. Defaulted to nil. This is an alpha field enabled by
        /// ImmutableEphemeralVolumes feature gate.</param>
        /// <param name="kind">Kind is a string value representing the REST
        /// resource this object represents. Servers may infer this from the
        /// endpoint the client submits requests to. Cannot be updated. In
        /// CamelCase. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</param>
        /// <param name="metadata">Standard object's metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata</param>
        /// <param name="stringData">stringData allows specifying non-binary
        /// secret data in string form. It is provided as a write-only
        /// convenience method. All keys and values are merged into the data
        /// field on write, overwriting any existing values. It is never output
        /// when reading from the API.</param>
        /// <param name="type">Used to facilitate programmatic handling of
        /// secret data.</param>
        public V1Secret(string apiVersion = default(string), IDictionary<string, byte[]> data = default(IDictionary<string, byte[]>), bool? immutable = default(bool?), string kind = default(string), V1ObjectMeta metadata = default(V1ObjectMeta), IDictionary<string, string> stringData = default(IDictionary<string, string>), string type = default(string))
        {
            ApiVersion = apiVersion;
            Data = data;
            Immutable = immutable;
            Kind = kind;
            Metadata = metadata;
            StringData = stringData;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets aPIVersion defines the versioned schema of this
        /// representation of an object. Servers should convert recognized
        /// schemas to the latest internal value, and may reject unrecognized
        /// values. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Gets or sets data contains the secret data. Each key must consist
        /// of alphanumeric characters, '-', '_' or '.'. The serialized form of
        /// the secret data is a base64 encoded string, representing the
        /// arbitrary (possibly non-string) data value here. Described in
        /// https://tools.ietf.org/html/rfc4648#section-4
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public IDictionary<string, byte[]> Data { get; set; }

        /// <summary>
        /// Gets or sets immutable, if set to true, ensures that data stored in
        /// the Secret cannot be updated (only object metadata can be
        /// modified). If not set to true, the field can be modified at any
        /// time. Defaulted to nil. This is an alpha field enabled by
        /// ImmutableEphemeralVolumes feature gate.
        /// </summary>
        [JsonProperty(PropertyName = "immutable")]
        public bool? Immutable { get; set; }

        /// <summary>
        /// Gets or sets kind is a string value representing the REST resource
        /// this object represents. Servers may infer this from the endpoint
        /// the client submits requests to. Cannot be updated. In CamelCase.
        /// More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets standard object's metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public V1ObjectMeta Metadata { get; set; }

        /// <summary>
        /// Gets or sets stringData allows specifying non-binary secret data in
        /// string form. It is provided as a write-only convenience method. All
        /// keys and values are merged into the data field on write,
        /// overwriting any existing values. It is never output when reading
        /// from the API.
        /// </summary>
        [JsonProperty(PropertyName = "stringData")]
        public IDictionary<string, string> StringData { get; set; }

        /// <summary>
        /// Gets or sets used to facilitate programmatic handling of secret
        /// data.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

    }
}
