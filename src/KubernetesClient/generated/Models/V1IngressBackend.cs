// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// IngressBackend describes all endpoints for a given service and port.
    /// </summary>
    public partial class V1IngressBackend
    {
        /// <summary>
        /// Initializes a new instance of the V1IngressBackend class.
        /// </summary>
        public V1IngressBackend()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1IngressBackend class.
        /// </summary>
        /// <param name="resource">
        /// Resource is an ObjectRef to another Kubernetes resource in the namespace of the
        /// Ingress object. If resource is specified, a service.Name and service.Port must
        /// not be specified. This is a mutually exclusive setting with &quot;Service&quot;.
        /// </param>
        /// <param name="service">
        /// Service references a Service as a Backend. This is a mutually exclusive setting
        /// with &quot;Resource&quot;.
        /// </param>
        public V1IngressBackend(V1TypedLocalObjectReference resource = null, V1IngressServiceBackend service = null)
        {
            Resource = resource;
            Service = service;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Resource is an ObjectRef to another Kubernetes resource in the namespace of the
        /// Ingress object. If resource is specified, a service.Name and service.Port must
        /// not be specified. This is a mutually exclusive setting with &quot;Service&quot;.
        /// </summary>
        [JsonProperty(PropertyName = "resource")]
        public V1TypedLocalObjectReference Resource { get; set; }

        /// <summary>
        /// Service references a Service as a Backend. This is a mutually exclusive setting
        /// with &quot;Resource&quot;.
        /// </summary>
        [JsonProperty(PropertyName = "service")]
        public V1IngressServiceBackend Service { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            Resource?.Validate();
            Service?.Validate();
        }
    }
}
