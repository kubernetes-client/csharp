// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// PortworxVolumeSource represents a Portworx volume resource.
    /// </summary>
    public partial class V1PortworxVolumeSource
    {
        /// <summary>
        /// Initializes a new instance of the V1PortworxVolumeSource class.
        /// </summary>
        public V1PortworxVolumeSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1PortworxVolumeSource class.
        /// </summary>
        /// <param name="volumeID">
        /// VolumeID uniquely identifies a Portworx volume
        /// </param>
        /// <param name="fsType">
        /// FSType represents the filesystem type to mount Must be a filesystem type
        /// supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;. Implicitly inferred
        /// to be &quot;ext4&quot; if unspecified.
        /// </param>
        /// <param name="readOnlyProperty">
        /// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in
        /// VolumeMounts.
        /// </param>
        public V1PortworxVolumeSource(string volumeID, string fsType = null, bool? readOnlyProperty = null)
        {
            FsType = fsType;
            ReadOnlyProperty = readOnlyProperty;
            VolumeID = volumeID;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// FSType represents the filesystem type to mount Must be a filesystem type
        /// supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;. Implicitly inferred
        /// to be &quot;ext4&quot; if unspecified.
        /// </summary>
        [JsonPropertyName("fsType")]
        public string FsType { get; set; }

        /// <summary>
        /// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in
        /// VolumeMounts.
        /// </summary>
        [JsonPropertyName("readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// VolumeID uniquely identifies a Portworx volume
        /// </summary>
        [JsonPropertyName("volumeID")]
        public string VolumeID { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
