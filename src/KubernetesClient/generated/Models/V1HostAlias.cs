// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// HostAlias holds the mapping between IP and hostnames that will be injected as an
        /// entry in the pod&apos;s hosts file.
    /// </summary>
    public partial class V1HostAlias
    {
        /// <summary>
        /// Initializes a new instance of the V1HostAlias class.
        /// </summary>
        public V1HostAlias()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1HostAlias class.
        /// </summary>
        /// <param name="hostnames">
        /// Hostnames for the above IP address.
        /// </param>
        /// <param name="ip">
        /// IP address of the host file entry.
        /// </param>
        public V1HostAlias(IList<string> hostnames = null, string ip = null)
        {
            Hostnames = hostnames;
            Ip = ip;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Hostnames for the above IP address.
        /// </summary>
        [JsonProperty(PropertyName = "hostnames")]
        public IList<string> Hostnames { get; set; }

        /// <summary>
        /// IP address of the host file entry.
        /// </summary>
        [JsonProperty(PropertyName = "ip")]
        public string Ip { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
