// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// NodeSpec describes the attributes that a node is created with.
    /// </summary>
    public partial class V1NodeSpec
    {
        /// <summary>
        /// Initializes a new instance of the V1NodeSpec class.
        /// </summary>
        public V1NodeSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1NodeSpec class.
        /// </summary>
        /// <param name="configSource">
        /// Deprecated. If specified, the source of the node&apos;s configuration. The
        /// DynamicKubeletConfig feature gate must be enabled for the Kubelet to use this
        /// field. This field is deprecated as of 1.22:
        /// https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration
        /// </param>
        /// <param name="externalID">
        /// Deprecated. Not all kubelets will set this field. Remove field after 1.13. see:
        /// https://issues.k8s.io/61966
        /// </param>
        /// <param name="podCIDR">
        /// PodCIDR represents the pod IP range assigned to the node.
        /// </param>
        /// <param name="podCIDRs">
        /// podCIDRs represents the IP ranges assigned to the node for usage by Pods on that
        /// node. If this field is specified, the 0th entry must match the podCIDR field. It
        /// may contain at most 1 value for each of IPv4 and IPv6.
        /// </param>
        /// <param name="providerID">
        /// ID of the node assigned by the cloud provider in the format:
        /// &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;
        /// </param>
        /// <param name="taints">
        /// If specified, the node&apos;s taints.
        /// </param>
        /// <param name="unschedulable">
        /// Unschedulable controls node schedulability of new pods. By default, node is
        /// schedulable. More info:
        /// https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
        /// </param>
        public V1NodeSpec(V1NodeConfigSource configSource = null, string externalID = null, string podCIDR = null, IList<string> podCIDRs = null, string providerID = null, IList<V1Taint> taints = null, bool? unschedulable = null)
        {
            ConfigSource = configSource;
            ExternalID = externalID;
            PodCIDR = podCIDR;
            PodCIDRs = podCIDRs;
            ProviderID = providerID;
            Taints = taints;
            Unschedulable = unschedulable;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Deprecated. If specified, the source of the node&apos;s configuration. The
        /// DynamicKubeletConfig feature gate must be enabled for the Kubelet to use this
        /// field. This field is deprecated as of 1.22:
        /// https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration
        /// </summary>
        [JsonProperty(PropertyName = "configSource")]
        public V1NodeConfigSource ConfigSource { get; set; }

        /// <summary>
        /// Deprecated. Not all kubelets will set this field. Remove field after 1.13. see:
        /// https://issues.k8s.io/61966
        /// </summary>
        [JsonProperty(PropertyName = "externalID")]
        public string ExternalID { get; set; }

        /// <summary>
        /// PodCIDR represents the pod IP range assigned to the node.
        /// </summary>
        [JsonProperty(PropertyName = "podCIDR")]
        public string PodCIDR { get; set; }

        /// <summary>
        /// podCIDRs represents the IP ranges assigned to the node for usage by Pods on that
        /// node. If this field is specified, the 0th entry must match the podCIDR field. It
        /// may contain at most 1 value for each of IPv4 and IPv6.
        /// </summary>
        [JsonProperty(PropertyName = "podCIDRs")]
        public IList<string> PodCIDRs { get; set; }

        /// <summary>
        /// ID of the node assigned by the cloud provider in the format:
        /// &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;
        /// </summary>
        [JsonProperty(PropertyName = "providerID")]
        public string ProviderID { get; set; }

        /// <summary>
        /// If specified, the node&apos;s taints.
        /// </summary>
        [JsonProperty(PropertyName = "taints")]
        public IList<V1Taint> Taints { get; set; }

        /// <summary>
        /// Unschedulable controls node schedulability of new pods. By default, node is
        /// schedulable. More info:
        /// https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
        /// </summary>
        [JsonProperty(PropertyName = "unschedulable")]
        public bool? Unschedulable { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            ConfigSource?.Validate();
            foreach(var obj in Taints)
            {
                obj.Validate();
            }
        }
    }
}
