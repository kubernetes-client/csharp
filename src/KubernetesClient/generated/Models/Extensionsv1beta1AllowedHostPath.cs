// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// defines the host volume conditions that will be enabled by a policy for
    /// pods to use. It requires the path prefix to be defined.
    /// </summary>
    public partial class Extensionsv1beta1AllowedHostPath
    {
        /// <summary>
        /// Initializes a new instance of the Extensionsv1beta1AllowedHostPath
        /// class.
        /// </summary>
        public Extensionsv1beta1AllowedHostPath()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Extensionsv1beta1AllowedHostPath
        /// class.
        /// </summary>
        /// <param name="pathPrefix">is the path prefix that the host volume
        /// must match. It does not support `*`. Trailing slashes are trimmed
        /// when validating the path prefix with a host path.
        ///
        /// Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo`
        /// would not allow `/food` or `/etc/foo`</param>
        public Extensionsv1beta1AllowedHostPath(string pathPrefix = default(string))
        {
            PathPrefix = pathPrefix;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets is the path prefix that the host volume must match. It
        /// does not support `*`. Trailing slashes are trimmed when validating
        /// the path prefix with a host path.
        ///
        /// Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo`
        /// would not allow `/food` or `/etc/foo`
        /// </summary>
        [JsonProperty(PropertyName = "pathPrefix")]
        public string PathPrefix { get; set; }

    }
}
