// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// Subject contains a reference to the object or user identities a role binding
        /// applies to.  This can either hold a direct API object reference, or a value for
        /// non-objects such as user and group names.
    /// </summary>
    public partial class V1Subject
    {
        /// <summary>
        /// Initializes a new instance of the V1Subject class.
        /// </summary>
        public V1Subject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1Subject class.
        /// </summary>
        /// <param name="kind">
        /// Kind of object being referenced. Values defined by this API group are &quot;User&quot;,
        /// &quot;Group&quot;, and &quot;ServiceAccount&quot;. If the Authorizer does not recognized the kind
        /// value, the Authorizer should report an error.
        /// </param>
        /// <param name="name">
        /// Name of the object being referenced.
        /// </param>
        /// <param name="apiGroup">
        /// APIGroup holds the API group of the referenced subject. Defaults to &quot;&quot; for
        /// ServiceAccount subjects. Defaults to &quot;rbac.authorization.k8s.io&quot; for User and
        /// Group subjects.
        /// </param>
        /// <param name="namespaceProperty">
        /// Namespace of the referenced object.  If the object kind is non-namespace, such
        /// as &quot;User&quot; or &quot;Group&quot;, and this value is not empty the Authorizer should report
        /// an error.
        /// </param>
        public V1Subject(string kind, string name, string apiGroup = null, string namespaceProperty = null)
        {
            ApiGroup = apiGroup;
            Kind = kind;
            Name = name;
            NamespaceProperty = namespaceProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// APIGroup holds the API group of the referenced subject. Defaults to &quot;&quot; for
        /// ServiceAccount subjects. Defaults to &quot;rbac.authorization.k8s.io&quot; for User and
        /// Group subjects.
        /// </summary>
        [JsonPropertyName("apiGroup")]
        public string ApiGroup { get; set; }

        /// <summary>
        /// Kind of object being referenced. Values defined by this API group are &quot;User&quot;,
        /// &quot;Group&quot;, and &quot;ServiceAccount&quot;. If the Authorizer does not recognized the kind
        /// value, the Authorizer should report an error.
        /// </summary>
        [JsonPropertyName("kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Name of the object being referenced.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }

        /// <summary>
        /// Namespace of the referenced object.  If the object kind is non-namespace, such
        /// as &quot;User&quot; or &quot;Group&quot;, and this value is not empty the Authorizer should report
        /// an error.
        /// </summary>
        [JsonPropertyName("namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
