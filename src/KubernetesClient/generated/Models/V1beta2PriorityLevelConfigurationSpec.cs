// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// PriorityLevelConfigurationSpec specifies the configuration of a priority level.
    /// </summary>
    public partial class V1beta2PriorityLevelConfigurationSpec
    {
        /// <summary>
        /// Initializes a new instance of the V1beta2PriorityLevelConfigurationSpec class.
        /// </summary>
        public V1beta2PriorityLevelConfigurationSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1beta2PriorityLevelConfigurationSpec class.
        /// </summary>
        /// <param name="type">
        /// `type` indicates whether this priority level is subject to limitation on request
        /// execution.  A value of `&quot;Exempt&quot;` means that requests of this priority level are
        /// not subject to a limit (and thus are never queued) and do not detract from the
        /// capacity made available to other priority levels.  A value of `&quot;Limited&quot;` means
        /// that (a) requests of this priority level _are_ subject to limits and (b) some of
        /// the server&apos;s limited capacity is made available exclusively to this priority
        /// level. Required.
        /// </param>
        /// <param name="limited">
        /// `limited` specifies how requests are handled for a Limited priority level. This
        /// field must be non-empty if and only if `type` is `&quot;Limited&quot;`.
        /// </param>
        public V1beta2PriorityLevelConfigurationSpec(string type, V1beta2LimitedPriorityLevelConfiguration limited = null)
        {
            Limited = limited;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// `limited` specifies how requests are handled for a Limited priority level. This
        /// field must be non-empty if and only if `type` is `&quot;Limited&quot;`.
        /// </summary>
        [JsonPropertyName("limited")]
        public V1beta2LimitedPriorityLevelConfiguration Limited { get; set; }

        /// <summary>
        /// `type` indicates whether this priority level is subject to limitation on request
        /// execution.  A value of `&quot;Exempt&quot;` means that requests of this priority level are
        /// not subject to a limit (and thus are never queued) and do not detract from the
        /// capacity made available to other priority levels.  A value of `&quot;Limited&quot;` means
        /// that (a) requests of this priority level _are_ subject to limits and (b) some of
        /// the server&apos;s limited capacity is made available exclusively to this priority
        /// level. Required.
        /// </summary>
        [JsonPropertyName("type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            Limited?.Validate();
        }
    }
}
