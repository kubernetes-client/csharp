// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// DownwardAPIVolumeFile represents information to create the file containing the
        /// pod field
    /// </summary>
    public partial class V1DownwardAPIVolumeFile
    {
        /// <summary>
        /// Initializes a new instance of the V1DownwardAPIVolumeFile class.
        /// </summary>
        public V1DownwardAPIVolumeFile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1DownwardAPIVolumeFile class.
        /// </summary>
        /// <param name="path">
        /// Required: Path is  the relative path name of the file to be created. Must not be
        /// absolute or contain the &apos;..&apos; path. Must be utf-8 encoded. The first item of the
        /// relative path must not start with &apos;..&apos;
        /// </param>
        /// <param name="fieldRef">
        /// Required: Selects a field of the pod: only annotations, labels, name and
        /// namespace are supported.
        /// </param>
        /// <param name="mode">
        /// Optional: mode bits used to set permissions on this file, must be an octal value
        /// between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both
        /// octal and decimal values, JSON requires decimal values for mode bits. If not
        /// specified, the volume defaultMode will be used. This might be in conflict with
        /// other options that affect the file mode, like fsGroup, and the result can be
        /// other mode bits set.
        /// </param>
        /// <param name="resourceFieldRef">
        /// Selects a resource of the container: only resources limits and requests
        /// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently
        /// supported.
        /// </param>
        public V1DownwardAPIVolumeFile(string path, V1ObjectFieldSelector fieldRef = null, int? mode = null, V1ResourceFieldSelector resourceFieldRef = null)
        {
            FieldRef = fieldRef;
            Mode = mode;
            Path = path;
            ResourceFieldRef = resourceFieldRef;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Required: Selects a field of the pod: only annotations, labels, name and
        /// namespace are supported.
        /// </summary>
        [JsonPropertyName("fieldRef")]
        public V1ObjectFieldSelector FieldRef { get; set; }

        /// <summary>
        /// Optional: mode bits used to set permissions on this file, must be an octal value
        /// between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both
        /// octal and decimal values, JSON requires decimal values for mode bits. If not
        /// specified, the volume defaultMode will be used. This might be in conflict with
        /// other options that affect the file mode, like fsGroup, and the result can be
        /// other mode bits set.
        /// </summary>
        [JsonPropertyName("mode")]
        public int? Mode { get; set; }

        /// <summary>
        /// Required: Path is  the relative path name of the file to be created. Must not be
        /// absolute or contain the &apos;..&apos; path. Must be utf-8 encoded. The first item of the
        /// relative path must not start with &apos;..&apos;
        /// </summary>
        [JsonPropertyName("path")]
        public string Path { get; set; }

        /// <summary>
        /// Selects a resource of the container: only resources limits and requests
        /// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently
        /// supported.
        /// </summary>
        [JsonPropertyName("resourceFieldRef")]
        public V1ResourceFieldSelector ResourceFieldRef { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            FieldRef?.Validate();
            ResourceFieldRef?.Validate();
        }
    }
}
