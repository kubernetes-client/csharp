// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    /// <summary>
    /// DaemonSetUpdateStrategy is a struct used to control the update strategy for a
        /// DaemonSet.
    /// </summary>
    public partial class V1DaemonSetUpdateStrategy
    {
        /// <summary>
        /// Initializes a new instance of the V1DaemonSetUpdateStrategy class.
        /// </summary>
        public V1DaemonSetUpdateStrategy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1DaemonSetUpdateStrategy class.
        /// </summary>
        /// <param name="rollingUpdate">
        /// Rolling update config params. Present only if type = &quot;RollingUpdate&quot;.
        /// </param>
        /// <param name="type">
        /// Type of daemon set update. Can be &quot;RollingUpdate&quot; or &quot;OnDelete&quot;. Default is
        /// RollingUpdate.
        /// 
        /// Possible enum values:
        /// - `&quot;OnDelete&quot;` Replace the old daemons only when it&apos;s killed
        /// - `&quot;RollingUpdate&quot;` Replace the old daemons by new ones using rolling update i.e
        /// replace them on each node one after the other.
        /// </param>
        public V1DaemonSetUpdateStrategy(V1RollingUpdateDaemonSet rollingUpdate = null, string type = null)
        {
            RollingUpdate = rollingUpdate;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Rolling update config params. Present only if type = &quot;RollingUpdate&quot;.
        /// </summary>
        [JsonPropertyName("rollingUpdate")]
        public V1RollingUpdateDaemonSet RollingUpdate { get; set; }

        /// <summary>
        /// Type of daemon set update. Can be &quot;RollingUpdate&quot; or &quot;OnDelete&quot;. Default is
        /// RollingUpdate.
        /// 
        /// Possible enum values:
        /// - `&quot;OnDelete&quot;` Replace the old daemons only when it&apos;s killed
        /// - `&quot;RollingUpdate&quot;` Replace the old daemons by new ones using rolling update i.e
        /// replace them on each node one after the other.
        /// </summary>
        [JsonPropertyName("type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            RollingUpdate?.Validate();
        }
    }
}
