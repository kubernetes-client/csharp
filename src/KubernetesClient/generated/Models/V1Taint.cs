// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// The node this Taint is attached to has the &quot;effect&quot; on any pod that does not
        /// tolerate the Taint.
    /// </summary>
    public partial class V1Taint
    {
        /// <summary>
        /// Initializes a new instance of the V1Taint class.
        /// </summary>
        public V1Taint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1Taint class.
        /// </summary>
        /// <param name="effect">
        /// Required. The effect of the taint on pods that do not tolerate the taint. Valid
        /// effects are NoSchedule, PreferNoSchedule and NoExecute.
        /// 
        /// Possible enum values:
        /// - `&quot;NoExecute&quot;` Evict any already-running pods that do not tolerate the taint.
        /// Currently enforced by NodeController.
        /// - `&quot;NoSchedule&quot;` Do not allow new pods to schedule onto the node unless they
        /// tolerate the taint, but allow all pods submitted to Kubelet without going
        /// through the scheduler to start, and allow all already-running pods to continue
        /// running. Enforced by the scheduler.
        /// - `&quot;PreferNoSchedule&quot;` Like TaintEffectNoSchedule, but the scheduler tries not
        /// to schedule new pods onto the node, rather than prohibiting new pods from
        /// scheduling onto the node entirely. Enforced by the scheduler.
        /// </param>
        /// <param name="key">
        /// Required. The taint key to be applied to a node.
        /// </param>
        /// <param name="timeAdded">
        /// TimeAdded represents the time at which the taint was added. It is only written
        /// for NoExecute taints.
        /// </param>
        /// <param name="value">
        /// The taint value corresponding to the taint key.
        /// </param>
        public V1Taint(string effect, string key, System.DateTime? timeAdded = null, string value = null)
        {
            Effect = effect;
            Key = key;
            TimeAdded = timeAdded;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Required. The effect of the taint on pods that do not tolerate the taint. Valid
        /// effects are NoSchedule, PreferNoSchedule and NoExecute.
        /// 
        /// Possible enum values:
        /// - `&quot;NoExecute&quot;` Evict any already-running pods that do not tolerate the taint.
        /// Currently enforced by NodeController.
        /// - `&quot;NoSchedule&quot;` Do not allow new pods to schedule onto the node unless they
        /// tolerate the taint, but allow all pods submitted to Kubelet without going
        /// through the scheduler to start, and allow all already-running pods to continue
        /// running. Enforced by the scheduler.
        /// - `&quot;PreferNoSchedule&quot;` Like TaintEffectNoSchedule, but the scheduler tries not
        /// to schedule new pods onto the node, rather than prohibiting new pods from
        /// scheduling onto the node entirely. Enforced by the scheduler.
        /// </summary>
        [JsonProperty(PropertyName = "effect")]
        public string Effect { get; set; }

        /// <summary>
        /// Required. The taint key to be applied to a node.
        /// </summary>
        [JsonProperty(PropertyName = "key")]
        public string Key { get; set; }

        /// <summary>
        /// TimeAdded represents the time at which the taint was added. It is only written
        /// for NoExecute taints.
        /// </summary>
        [JsonProperty(PropertyName = "timeAdded")]
        public System.DateTime? TimeAdded { get; set; }

        /// <summary>
        /// The taint value corresponding to the taint key.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
