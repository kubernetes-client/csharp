// <auto-generated>
// Code generated by https://github.com/kubernetes-client/csharp/tree/master/gen/KubernetesGenerator
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System.Collections;
    using System.Linq;

    /// <summary>
    /// Local represents directly-attached storage with node affinity (Beta feature)
    /// </summary>
    public partial class V1LocalVolumeSource
    {
        /// <summary>
        /// Initializes a new instance of the V1LocalVolumeSource class.
        /// </summary>
        public V1LocalVolumeSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1LocalVolumeSource class.
        /// </summary>
        /// <param name="path">
        /// The full path to the volume on the node. It can be either a directory or block
        /// device (disk, partition, ...).
        /// </param>
        /// <param name="fsType">
        /// Filesystem type to mount. It applies only when the Path is a block device. Must
        /// be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;,
        /// &quot;ntfs&quot;. The default value is to auto-select a fileystem if unspecified.
        /// </param>
        public V1LocalVolumeSource(string path, string fsType = null)
        {
            FsType = fsType;
            Path = path;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Filesystem type to mount. It applies only when the Path is a block device. Must
        /// be a filesystem type supported by the host operating system. Ex. &quot;ext4&quot;, &quot;xfs&quot;,
        /// &quot;ntfs&quot;. The default value is to auto-select a fileystem if unspecified.
        /// </summary>
        [JsonProperty(PropertyName = "fsType")]
        public string FsType { get; set; }

        /// <summary>
        /// The full path to the volume on the node. It can be either a directory or block
        /// device (disk, partition, ...).
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
