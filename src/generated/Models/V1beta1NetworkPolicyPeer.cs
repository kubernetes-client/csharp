// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace k8s.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// DEPRECATED 1.9 - This group version of NetworkPolicyPeer is deprecated
    /// by networking/v1/NetworkPolicyPeer.
    /// </summary>
    public partial class V1beta1NetworkPolicyPeer
    {
        /// <summary>
        /// Initializes a new instance of the V1beta1NetworkPolicyPeer class.
        /// </summary>
        public V1beta1NetworkPolicyPeer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1beta1NetworkPolicyPeer class.
        /// </summary>
        /// <param name="ipBlock">IPBlock defines policy on a particular
        /// IPBlock</param>
        /// <param name="namespaceSelector">Selects Namespaces using cluster
        /// scoped-labels.  This matches all pods in all namespaces selected by
        /// this label selector. This field follows standard label selector
        /// semantics. If present but empty, this selector selects all
        /// namespaces.</param>
        /// <param name="podSelector">This is a label selector which selects
        /// Pods in this namespace. This field follows standard label selector
        /// semantics. If present but empty, this selector selects all pods in
        /// this namespace.</param>
        public V1beta1NetworkPolicyPeer(V1beta1IPBlock ipBlock = default(V1beta1IPBlock), V1LabelSelector namespaceSelector = default(V1LabelSelector), V1LabelSelector podSelector = default(V1LabelSelector))
        {
            IpBlock = ipBlock;
            NamespaceSelector = namespaceSelector;
            PodSelector = podSelector;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets iPBlock defines policy on a particular IPBlock
        /// </summary>
        [JsonProperty(PropertyName = "ipBlock")]
        public V1beta1IPBlock IpBlock { get; set; }

        /// <summary>
        /// Gets or sets selects Namespaces using cluster scoped-labels.  This
        /// matches all pods in all namespaces selected by this label selector.
        /// This field follows standard label selector semantics. If present
        /// but empty, this selector selects all namespaces.
        /// </summary>
        [JsonProperty(PropertyName = "namespaceSelector")]
        public V1LabelSelector NamespaceSelector { get; set; }

        /// <summary>
        /// Gets or sets this is a label selector which selects Pods in this
        /// namespace. This field follows standard label selector semantics. If
        /// present but empty, this selector selects all pods in this
        /// namespace.
        /// </summary>
        [JsonProperty(PropertyName = "podSelector")]
        public V1LabelSelector PodSelector { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (IpBlock != null)
            {
                IpBlock.Validate();
            }
        }
    }
}
